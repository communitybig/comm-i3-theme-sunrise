#!/bin/bash

# Installation file for Arch Linux packages - Sunrise Theme for i3wm

# Global variables
THEME_NAME="Sunrise"
THEMES_DIR="/usr/share/themes/$THEME_NAME"

# Function to backup wallpaper settings for i3
backup_wallpaper() {
    local user="$1"
    local user_home="$2"
    local wallpaper_backup="$user_home/.config/${THEME_NAME}-wallpaper-backup.txt"
    
    echo "Salvando configuração atual do wallpaper para i3..."
    
    # For i3, check for feh, nitrogen, or other wallpaper managers
    if [ -f "$user_home/.fehbg" ]; then
        cp "$user_home/.fehbg" "$wallpaper_backup"
        echo "Backup do feh wallpaper realizado."
    elif [ -f "$user_home/.config/nitrogen/bg-saved.cfg" ]; then
        cp "$user_home/.config/nitrogen/bg-saved.cfg" "$wallpaper_backup"
        echo "Backup do nitrogen wallpaper realizado."
    elif [ -f "$user_home/.config/i3/config" ]; then
        # Try to extract wallpaper command from i3 config
        grep -E "exec.*feh|exec.*nitrogen" "$user_home/.config/i3/config" > "$wallpaper_backup" || true
        if [ -s "$wallpaper_backup" ]; then
            echo "Extraído comando de wallpaper do config do i3."
        else
            echo "Nenhum comando de wallpaper encontrado no config do i3."
            rm -f "$wallpaper_backup"
        fi
    else
        echo "Nenhuma configuração de wallpaper encontrada para backup."
        return 1
    fi
    
    if [ -f "$wallpaper_backup" ]; then
        chown "$user:$user" "$wallpaper_backup" 2>/dev/null
        echo "Backup do wallpaper criado em $wallpaper_backup"
    fi
    
    return 0
}

# Function to backup current GTK settings
backup_gtk_settings() {
    local user="$1"
    local user_home="$2"
    local timestamp=$(date +%Y%m%d%H%M%S)
    local backup_dir="$user_home/backup_customizations"
    
    echo "Criando backup das configurações GTK para i3..."
    
    # Create backup directory if it doesn't exist
    mkdir -p "$backup_dir"
    chown "$user:$user" "$backup_dir"
    
    # Backup GTK configuration files
    GTK4_DIR="$user_home/.config/gtk-4.0"
    GTK3_DIR="$user_home/.config/gtk-3.0"
    GTK2_FILE="$user_home/.gtkrc-2.0"
    GTK2_DIR="$user_home/.gtk-2.0"
    
    for dir in "$GTK4_DIR" "$GTK3_DIR" "$GTK2_DIR"; do
        if [ -d "$dir" ]; then
            tar -czf "$backup_dir/$(basename "$dir")-$timestamp.tar.gz" -C "$(dirname "$dir")" "$(basename "$dir")"
            echo "Backup criado: $(basename "$dir")-$timestamp.tar.gz"
        fi
    done
    
    if [ -f "$GTK2_FILE" ]; then
        cp "$GTK2_FILE" "$backup_dir/gtkrc-2.0-$timestamp.bak"
        echo "Backup criado: gtkrc-2.0-$timestamp.bak"
    fi
    
    # Backup i3-specific theme settings if any
    if [ -f "$user_home/.config/gtk-3.0/settings.ini" ]; then
        cp "$user_home/.config/gtk-3.0/settings.ini" "$backup_dir/gtk3-settings-$timestamp.bak"
        echo "Backup das configurações GTK3 criado."
    fi
    
    if [ -f "$user_home/.config/gtk-4.0/settings.ini" ]; then
        cp "$user_home/.config/gtk-4.0/settings.ini" "$backup_dir/gtk4-settings-$timestamp.bak"
        echo "Backup das configurações GTK4 criado."
    fi
    
    # Set ownership for backup files
    chown -R "$user:$user" "$backup_dir"
    
    return 0
}

# Function executed before package installation
pre_install() {
    echo "Preparando para instalar o tema Sunrise para i3wm..."
}

# Function executed after package installation
post_install() {
    echo "Aplicando tema Sunrise para GTK no i3wm..."

    # Get user information
    user=$(logname)
    user_home=$(getent passwd "$user" | cut -d: -f6)

    if [ -z "$user_home" ]; then
        echo "Não foi possível determinar o diretório home para o usuário $user. Pulando aplicação do tema."
        return 1
    fi

    # Backup wallpaper settings first
    backup_wallpaper "$user" "$user_home"
    
    # Backup current GTK settings
    backup_gtk_settings "$user" "$user_home"

    # Directories
    GTK4_DIR="$user_home/.config/gtk-4.0"
    GTK3_DIR="$user_home/.config/gtk-3.0"
    GTK2_FILE="$user_home/.gtkrc-2.0"

    # Create directories if they don't exist
    for dir in "$GTK4_DIR" "$GTK3_DIR"; do
        if [ ! -d "$dir" ]; then
            mkdir -p "$dir"
            chown "$user:$user" "$dir"
        fi
    done
    
    # Copy theme files
    echo "Copiando arquivos do tema Sunrise..."
    cp -rp "$THEMES_DIR/gtk-4.0/"* "$GTK4_DIR/" 2>/dev/null || echo "Aviso: Arquivos GTK4 não encontrados no tema."
    cp -rp "$THEMES_DIR/gtk-3.0/"* "$GTK3_DIR/" 2>/dev/null || echo "Aviso: Arquivos GTK3 não encontrados no tema."
    
    # Setup GTK2 if available
    if [ -f "$THEMES_DIR/gtk-2.0/gtkrc" ]; then
        echo "include \"$THEMES_DIR/gtk-2.0/gtkrc\"" > "$GTK2_FILE"
        echo "gtk-theme-name=\"$THEME_NAME\"" >> "$GTK2_FILE"
        chown "$user:$user" "$GTK2_FILE"
    fi

    # Set correct ownership
    chown -R "$user:$user" "$GTK4_DIR"
    chown -R "$user:$user" "$GTK3_DIR"

    # Update GTK settings.ini files to use the theme
    if [ ! -f "$GTK3_DIR/settings.ini" ] || ! grep -q "^gtk-theme-name" "$GTK3_DIR/settings.ini"; then
        # Create or update GTK3 settings.ini
        mkdir -p "$GTK3_DIR"
        echo "[Settings]" > "$GTK3_DIR/settings.ini"
        echo "gtk-theme-name=$THEME_NAME" >> "$GTK3_DIR/settings.ini"
        echo "gtk-application-prefer-dark-theme=1" >> "$GTK3_DIR/settings.ini"
        chown -R "$user:$user" "$GTK3_DIR"
    else
        # Update existing settings
        sed -i "s/^gtk-theme-name=.*/gtk-theme-name=$THEME_NAME/" "$GTK3_DIR/settings.ini"
    fi

    if [ ! -f "$GTK4_DIR/settings.ini" ] || ! grep -q "^gtk-theme-name" "$GTK4_DIR/settings.ini"; then
        # Create or update GTK4 settings.ini
        mkdir -p "$GTK4_DIR"
        echo "[Settings]" > "$GTK4_DIR/settings.ini"
        echo "gtk-theme-name=$THEME_NAME" >> "$GTK4_DIR/settings.ini"
        echo "gtk-application-prefer-dark-theme=1" >> "$GTK4_DIR/settings.ini"
        chown -R "$user:$user" "$GTK4_DIR"
    else
        # Update existing settings
        sed -i "s/^gtk-theme-name=.*/gtk-theme-name=$THEME_NAME/" "$GTK4_DIR/settings.ini"
    fi
    
    # Create symbolic link in user's .config directory pointing to assets if needed
    if [ -d "$THEMES_DIR/assets" ]; then
        echo "Criando link simbólico para assets em $user_home/.config..."
        ln -sf "$THEMES_DIR/assets" "$user_home/.config/assets"
        chown -h "$user:$user" "$user_home/.config/assets"
    fi

    # Restore wallpaper - this will ensure it's preserved
    local wallpaper_backup="$user_home/.config/${THEME_NAME}-wallpaper-backup.txt"
    if [ -f "$wallpaper_backup" ]; then
        if grep -q "feh" "$wallpaper_backup"; then
            # It's a feh backup
            cp "$wallpaper_backup" "$user_home/.fehbg"
            chmod +x "$user_home/.fehbg"
            echo "Restaurando wallpaper do feh..."
            su - "$user" -c "export DISPLAY=:0; $user_home/.fehbg &" || true
        elif grep -q "nitrogen" "$wallpaper_backup"; then
            # It's a nitrogen backup
            mkdir -p "$user_home/.config/nitrogen"
            cp "$wallpaper_backup" "$user_home/.config/nitrogen/bg-saved.cfg"
            echo "Restaurando wallpaper do nitrogen..."
            su - "$user" -c "export DISPLAY=:0; command -v nitrogen >/dev/null 2>&1 && nitrogen --restore &" || true
        elif grep -q "exec" "$wallpaper_backup"; then
            # It's an i3 command
            echo "Encontrado comando de wallpaper no config do i3. Mantenha-o em seu config."
        else
            echo "Formato de backup de wallpaper não reconhecido."
        fi
        # Keep the backup for uninstall
        chown "$user:$user" "$wallpaper_backup" 2>/dev/null
    else
        echo "Nenhum backup de wallpaper encontrado. O wallpaper atual será mantido."
    fi

    echo "Tema Sunrise aplicado com sucesso para i3wm! O wallpaper original foi preservado."
    return 0
}

# Function executed before package removal
pre_remove() {
    echo "Preparando para remover o tema Sunrise do i3wm..."
}

# Function executed after package removal
post_remove() {
    echo "Restaurando configurações padrão e removendo arquivos do tema Sunrise..."

    # Get user information
    user=$(logname)
    user_home=$(getent passwd "$user" | cut -d: -f6)
    backup_dir="$user_home/backup_customizations"
    
    # Verify if user's home directory exists
    if [ -z "$user_home" ]; then
        echo "Não foi possível determinar o diretório home para o usuário $user. Pulando restauração."
        return 1
    fi

    # GTK directories and files
    GTK4_DIR="$user_home/.config/gtk-4.0"
    GTK3_DIR="$user_home/.config/gtk-3.0"
    GTK2_FILE="$user_home/.gtkrc-2.0"
    
    # Restore backups
    echo "Restaurando diretórios GTK a partir de backups..."
    if [ -d "$backup_dir" ]; then
        # Find the latest backups
        latest_gtk4=$(ls -t "$backup_dir"/gtk-4.0-*.tar.gz 2>/dev/null | head -1)
        latest_gtk3=$(ls -t "$backup_dir"/gtk-3.0-*.tar.gz 2>/dev/null | head -1)
        latest_gtk2=$(ls -t "$backup_dir"/gtkrc-2.0-*.bak 2>/dev/null | head -1)
        latest_gtk3_settings=$(ls -t "$backup_dir"/gtk3-settings-*.bak 2>/dev/null | head -1)
        latest_gtk4_settings=$(ls -t "$backup_dir"/gtk4-settings-*.bak 2>/dev/null | head -1)
        
        # Remove current directories to avoid conflicts
        for dir in "$GTK4_DIR" "$GTK3_DIR"; do
            if [ -d "$dir" ]; then
                rm -rf "$dir"
                echo "Removido diretório atual: $dir"
            fi
        done
        
        # Restore GTK directories
        if [ -n "$latest_gtk4" ]; then
            echo "Restaurando $latest_gtk4..."
            mkdir -p "$user_home/.config"
            tar -xzf "$latest_gtk4" -C "$user_home/.config/"
            chown -R "$user:$user" "$GTK4_DIR"
        fi
        
        if [ -n "$latest_gtk3" ]; then
            echo "Restaurando $latest_gtk3..."
            mkdir -p "$user_home/.config"
            tar -xzf "$latest_gtk3" -C "$user_home/.config/"
            chown -R "$user:$user" "$GTK3_DIR"
        fi
        
        # If no complete backups, but we have settings backups
        if [ ! -n "$latest_gtk3" ] && [ -n "$latest_gtk3_settings" ]; then
            mkdir -p "$GTK3_DIR"
            cp "$latest_gtk3_settings" "$GTK3_DIR/settings.ini"
            chown -R "$user:$user" "$GTK3_DIR"
        fi
        
        if [ ! -n "$latest_gtk4" ] && [ -n "$latest_gtk4_settings" ]; then
            mkdir -p "$GTK4_DIR"
            cp "$latest_gtk4_settings" "$GTK4_DIR/settings.ini"
            chown -R "$user:$user" "$GTK4_DIR"
        fi
        
        # Restore GTK2 file
        if [ -n "$latest_gtk2" ]; then
            echo "Restaurando $latest_gtk2..."
            cp "$latest_gtk2" "$GTK2_FILE"
            chown "$user:$user" "$GTK2_FILE"
        elif [ -f "$GTK2_FILE" ] && grep -q "$THEME_NAME" "$GTK2_FILE"; then
            # Remove our GTK2 file if it's our theme
            rm -f "$GTK2_FILE"
            echo "Removido: $GTK2_FILE"
        fi
        
        # Restore wallpaper
        local wallpaper_backup="$user_home/.config/${THEME_NAME}-wallpaper-backup.txt"
        if [ -f "$wallpaper_backup" ]; then
            if grep -q "feh" "$wallpaper_backup"; then
                # It's a feh backup
                cp "$wallpaper_backup" "$user_home/.fehbg"
                chmod +x "$user_home/.fehbg"
                echo "Restaurando wallpaper do feh..."
                su - "$user" -c "export DISPLAY=:0; $user_home/.fehbg &" || true
            elif grep -q "nitrogen" "$wallpaper_backup"; then
                # It's a nitrogen backup
                mkdir -p "$user_home/.config/nitrogen"
                cp "$wallpaper_backup" "$user_home/.config/nitrogen/bg-saved.cfg"
                echo "Restaurando wallpaper do nitrogen..."
                su - "$user" -c "export DISPLAY=:0; command -v nitrogen >/dev/null 2>&1 && nitrogen --restore &" || true
            fi
            # Remove the backup file
            rm -f "$wallpaper_backup"
        fi
    else
        echo "Diretório de backup $backup_dir não encontrado. Pulando restauração."
    fi

    # Remove theme directory
    if [ -d "$THEMES_DIR" ]; then
        echo "Removendo diretório do tema: $THEMES_DIR"
        rm -rf "$THEMES_DIR"
    fi
    
    # Remove symbolic link assets
    if [ -L "$user_home/.config/assets" ]; then
        echo "Removendo link simbólico: $user_home/.config/assets"
        rm "$user_home/.config/assets"
    fi
    
    # Remove backup files
    if [ -d "$backup_dir" ]; then
        echo "Removendo diretório de backup: $backup_dir"
        rm -rf "$backup_dir"
    fi

    echo "Configurações padrão restauradas e todos os arquivos do tema Sunrise foram removidos."
    return 0
}
